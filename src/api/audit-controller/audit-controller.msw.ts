/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  rest
} from 'msw'
import {
  faker
} from '@faker-js/faker'

export const getFetchDatabaseMock = () => (Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({id: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timestamp: `${faker.date.past().toISOString().split('.')[0]}Z`, user: {id: faker.helpers.arrayElement([faker.datatype.uuid(), undefined]), email: faker.random.word(), firstName: faker.random.word(), lastName: faker.random.word()}, queryContent: faker.random.word(), sanitizedQueryContent: faker.random.word()})))

export const getFetchDatabaseSubsetMock = () => (Array.from({ length: faker.datatype.number({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({id: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), timestamp: `${faker.date.past().toISOString().split('.')[0]}Z`, user: {id: faker.helpers.arrayElement([faker.datatype.uuid(), undefined]), email: faker.random.word(), firstName: faker.random.word(), lastName: faker.random.word()}, queryContent: faker.random.word(), sanitizedQueryContent: faker.random.word()})))

export const getAuditControllerMSW = () => [
rest.post('*/audit/add-log', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/audit/get-logs', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getFetchDatabaseMock()),
        )
      }),rest.get('*/audit/get-logs-between', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getFetchDatabaseSubsetMock()),
        )
      }),]
